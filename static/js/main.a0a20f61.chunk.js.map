{"version":3,"sources":["components/GameDetails.js","components/Game.js","components/GamesList.js","App.js","reportWebVitals.js","index.js"],"names":["GameDetails","props","useState","Game","setGame","gameId","id","useEffect","axios","get","then","response","data","className","name","src","background_image","alt","released","rating","to","genres","pathname","GamesList","Games","setGames","results","console","log","map","game","key","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gUA6BeA,EAvBK,SAACC,GAAW,IAAD,EACNC,mBAAS,IADH,mBACvBC,EADuB,KACjBC,EADiB,KAErBC,EAASJ,EAAMK,GAQrB,OANAC,qBAAU,WACZC,IACEC,IADF,wCACuCJ,IACrCK,MAAK,SAAAC,GAAQ,OAAIP,EAAQO,EAASC,WAClC,IAGD,gCACa,gCACR,oBAAIC,UAAU,eAAd,SAA8BV,EAAKW,OACnC,qBAAKD,UAAU,eAAeE,IAAKZ,EAAKa,iBAAkBC,IAAKd,EAAKW,OACpE,2CAAcX,EAAKe,YACnB,oBAAGL,UAAU,gBAAb,qBAAsCV,EAAKgB,aAE/C,cAAC,IAAD,CAAMN,UAAU,cAAcO,GAAG,IAAjC,sC,QCLWjB,G,MAfH,SAAC,GAA4D,IAA3DG,EAA0D,EAA1DA,GAAIQ,EAAsD,EAAtDA,KAAME,EAAgD,EAAhDA,iBAAkBE,EAA8B,EAA9BA,SAAUG,EAAoB,EAApBA,OAAQF,EAAY,EAAZA,OAExD,OACI,sBAAKN,UAAU,aAAf,UACI,qBAAKA,UAAU,QAAQE,IAAKC,EAAkBC,IAAKH,IAC3D,qBAAKD,UAAU,OAAf,SAAuBC,IACX,sBAAKD,UAAU,SAAf,oBAAgCQ,EAAO,GAAGP,QACtD,qBAAKD,UAAU,WAAf,SAA2BK,IAC3B,sBAAKL,UAAU,SAAf,qBAAiCM,KACrB,cAAC,IAAD,CAAMN,UAAU,cAAcO,GAAI,CAACE,SAAS,IAAD,OAAKhB,GAChDM,KAAM,CAACN,OADP,0BCeDiB,G,MAtBG,WAAO,IAAD,EACMrB,mBAAS,IADf,mBACbsB,EADa,KACNC,EADM,KAUpB,OAPAlB,qBAAU,WACRC,IACGC,IAAI,mHACJC,MAAK,SAAAC,GAAQ,OAAIc,EAASd,EAASC,KAAKc,cAC1C,IACHC,QAAQC,IAAIJ,GAGR,gCACI,0DACA,qBAAKX,UAAU,aAAf,SACKW,EAAMK,KAAI,SAACC,GAAD,OACP,wBAAC,EAAD,2BAAUA,GAAV,IAAgBC,IAAKD,EAAKxB,gB,MCJ/B0B,MAXf,WACE,OACE,qBAAKnB,UAAU,MAAf,SACC,eAAC,IAAD,WACG,cAAC,IAAD,CAAOoB,OAAK,EAACC,KAAK,IAAIC,UAAWZ,IACjC,cAAC,IAAD,CAAOW,KAAK,OAAOC,UAAWnC,UCCvBoC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB5B,MAAK,YAAkD,IAA/C6B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a0a20f61.chunk.js","sourcesContent":["import axios from 'axios'\r\nimport React from 'react'\r\nimport { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './GameDetails.css'\r\n\r\nconst GameDetails = (props) => {\r\n\tconst [Game, setGame] = useState([])\r\n    const gameId = props.id\r\n\t\r\n    useEffect(() => {\r\n\t\taxios\r\n\t\t\t.get(`https://api.rawg.io/api/games/${gameId}`)\r\n\t\t\t.then(response => setGame(response.data))\r\n\t}, []);\r\n\t\r\n    return (\r\n\t\t\t<div>\r\n                <div>\r\n\t\t\t\t    <h1 className='detailsTitle'>{Game.name}</h1>\r\n\t\t\t\t    <img className='detailsImage' src={Game.background_image} alt={Game.name} />\r\n\t\t\t\t    <p>Released: {Game.released}</p>\r\n\t\t\t\t    <p className='detailsRating'>Rating: {Game.rating}</p>\r\n                </div>\r\n\t\t\t\t<Link className='detailsLien' to='/'> Return to all games</Link>\r\n\t\t\t</div>\r\n\t\t)\r\n}\r\n\r\nexport default GameDetails;","import React from 'react';\r\nimport './Game.css';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Game= ({id, name, background_image, released, genres, rating}) => {\r\n\r\n    return(\r\n        <div className='globalCard'>\r\n            <img className='image' src={background_image} alt={name} />\r\n\t\t\t\t<div className='name'>{name}</div>\r\n                <div className='genres'>Genre: {genres[0].name}</div>\r\n\t\t\t\t<div className='released'>{released}</div>\r\n\t\t\t\t<div className='rating'>Rating: {rating}</div>\r\n                <Link className='lienDetails' to={{pathname:`/${id}`, \r\n                data: {id}}}>Details</Link>\r\n        </div>\r\n        \r\n    )}\r\n\r\nexport default Game;","import axios from 'axios'\r\nimport React from 'react';\r\nimport { useState, useEffect } from 'react'\r\nimport Game from './Game'\r\nimport './GamesList.css'\r\n\r\nconst GamesList = () => {\r\n    const [Games, setGames] = useState([])\r\n   \r\n    useEffect(() => {\r\n      axios\r\n        .get('https://api.rawg.io/api/games?key=484294a8cc70495fafa1f0cad2b3c287&dates=2019-01-01,2019-12-31&platforms=18,1,7')\r\n        .then(response => setGames(response.data.results))\r\n    }, [])\r\n    console.log(Games)\r\n  \r\n    return (\r\n        <div>\r\n            <h1>List Popular Video Games</h1>\r\n            <div className='globalGame'>\r\n                {Games.map((game) => (\r\n                    <Game {...game} key={game.id} />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default GamesList","import { Switch, Route } from 'react-router-dom'\nimport GameDetails from './components/GameDetails'\nimport GamesList from './components/GamesList'\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <Switch>\n        <Route exact path='/' component={GamesList}/>\n        <Route path=\"/:id\" component={GameDetails}/>\n     </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}